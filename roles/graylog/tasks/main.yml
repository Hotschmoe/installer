#Deploys Graylog collector to log system metrics, not run by default
- name: Install the Collector Sidecar RPM
  yum:
    name: "{{sidecar_rpm}}"
    state: latest
  become: true
  when: ansible_distribution == 'Fedora' or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install the Collector Sidecar DEB
  apt:
    name: "{{sidecar_deb}}"
    state: latest
  become: true
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Fail on nonsystemd systems
  fail:
    msg: "No support for non systemd services, please add support for your init system!"
  when: "ansible_service_mgr != 'systemd'"

- name: Setup Sidecar service
  shell: "graylog-collector-sidecar -service install"
  become: true
  ignore_errors: true

- name: Create config folder
  file:
    path: /etc/graylog/graylog-sidecar/
    state: directory
  become: true

- name: Template sidecar config
  template:
    src: collector_sidecar.yml.j2
    dest: /etc/graylog/collector-sidecar/collector_sidecar.yml
  become: true

- name: Set Collector-sidecar to run on startup
  systemd:
    daemon_reload: yes
    name: collector-sidecar
    state: restarted
    enabled: yes
  become: true

- name: Wait for Quick crashes
  pause:
    seconds: 30

- name: Check if collector-sidecar is running
  command: systemctl status collector-sidecar
  ignore_errors: yes
  changed_when: false
  register: service_collector_sidecar_status

- name: Report status of collector_sidecar
  fail:
    msg: |
      Service graylog-sidecar is not running.
      Output of `systemctl status collector-sidecar`:
      {{ service_collector_sidecar_status.stdout }}
      {{ service_collector_sidecar_status.stderr }}
  when: service_collector_sidecar_status is failed

- name: Check for compressed_log_sink bianry
  local_action: stat path="{{playbook_dir}}/compressed_log_sink"
  register: compressed_log_sink_bin
  when: aggregator

- name: Compressed log sink bin not present, download latest release
  get_url:
    url: "{{compressed_log_sink_bin_url}}"
    dest: "/usr/bin/compressed_log_sink"
    mode: 0755
    force: true
  become: true
  when: not compressed_log_sink_bin.stat.exists and aggregator

- name: Copy Compressed log sink binary
  copy:
    src: "{{playbook_dir}}/compressed_log_sink"
    dest: /usr/bin/compressed_log_sink
    mode: 0755
  become: true
  when: compressed_log_sink_bin.stat.exists and aggregator

- name: Copy over ssl keys
  copy:
    src: "{{item}}"
    dest: "/etc/{{item}}"
  with_items:
    - fullchain.pem
    - privkey.pem
  when: aggregator

- name: Template compressed log sink service file
  template:
    src: compressed_log_sink.service.j2
    dest: /etc/systemd/system/compressed-log-sink.service
  become: true
  when: aggregator

- name: Set Compressed log sink to run on startup
  systemd:
    daemon_reload: yes
    name: compressed-log-sink
    state: restarted
    enabled: yes
  become: true
  when: aggregator

- name: Wait for Quick crashes
  pause:
    seconds: 30
  when: aggregator

- name: Check if compressed-log-sink is running
  command: systemctl status compressed-log-sink
  ignore_errors: yes
  changed_when: false
  register: service_compressed_log_sink_status
  when: aggregator

- name: Report status of compressed_log_sink
  fail:
    msg: |
      Service compressed-log-sink is not running.
      Output of `systemctl status compressed-log-sink`:
      {{ service_compressed_log_sink_status.stdout }}
      {{ service_compressed_log_sink_status.stderr }}
  when: service_compressed_log_sink_status is failed and aggregator
